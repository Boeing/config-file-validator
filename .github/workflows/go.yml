# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on: push

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        
    - name: Static Analysis
      run: go vet ./...

    - name: Check Formatting
      run: if [ "$(gofmt -s -l -e . | wc -l)" -gt 0 ]; then exit 1; fi

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags='-w -s -extldflags "-static"' -tags netgo -o validator cmd/validator/validator.go

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        
    - name: Test
      run: |
        go get golang.org/x/tools/cmd/cover
        go test -v -covermode=count -coverprofile=coverage.out ./... 

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        path-to-lcov: ./coverage.out
        github-token: ${{ secrets.GITHUB_TOKEN }}


