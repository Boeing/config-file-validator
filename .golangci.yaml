---
# Options for analysis running.
issues:
  # Maximum issues count per one linter.
  # Set to 0 to disable.
  # Default: 50
  max-issues-per-linter: 0
  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 0

linters:
  enable:
    # check when errors are compared without errors.Is
    - errorlint

    # check imports order and makes it always deterministic.
    - gci

    # linter to detect errors invalid key values count
    - loggercheck

    # report functions we don't want (println for example)
    # see linter-settings.forbidigo for more explanations
    #- forbidigo

    # Very Basic spell error checker
    - misspell

    # simple security check
    - gosec

    # Fast, configurable, extensible, flexible, and beautiful linter for Go.
    # Drop-in replacement of golint.
    - revive

    # Finds sending http request without context.Context
    - noctx

    # make sure to use t.Helper() when needed
    - thelper

    # make sure that error are checked after a rows.Next()
    - rowserrcheck

    # ensure that lint exceptions have explanations. Consider the case below:
    - nolintlint

    # detect duplicated words in code
    - dupword

    # detect the possibility to use variables/constants from the Go standard library.
    - usestdlibvars

    # mirror suggests rewrites to avoid unnecessary []byte/string conversion
    - mirror

    # testify checks good usage of github.com/stretchr/testify.
    - testifylint

linters-settings:
  usestdlibvars:
    # Suggest the use of http.MethodXX.
    # Default: true
    http-method: true
    # Suggest the use of http.StatusXX.
    # Default: true
    http-status-code: true
    # Suggest the use of time.Weekday.String().
    # Default: true
    # We don't want this
    time-weekday: false
    # Suggest the use of constants available in time package
    # Default: false
    time-layout: true

  nolintlint:
    # Disable to ensure that all nolint directives actually have an effect.
    # Default: false
    allow-unused: true  # too many false positive reported
    # Exclude following linters from requiring an explanation.
    # Default: []
    allow-no-explanation: []
    # Enable to require an explanation of nonzero length
    # after each nolint directive.
    # Default: false
    require-explanation: true
    # Enable to require nolint directives to mention the specific
    # linter being suppressed.
    # Default: false
    require-specific: true

  # define the import orders
  gci:
    sections:
      # Standard section: captures all standard packages.
      - standard
      # Default section: catchall that is not standard or custom
      - default
      # Custom section: groups all imports with the specified Prefix.
      - prefix(github.com/Boeing/config-file-validator)

  staticcheck:
    # SAxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    checks: ["all"]

  revive:
    enable-all-rules: true
    rules:
      # we must provide configuration for linter that requires them
      # enable-all-rules is OK, but many revive linters expect configuration
      # and cannot work without them

      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#context-as-argument
      - name: context-as-argument
        arguments:
          - allowTypesBefore: "*testing.T"

      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#exported
      - name: exported
        arguments:
          # enables checking public methods of private types
          - "checkPrivateReceivers"
          # make error messages clearer
          - "sayRepetitiveInsteadOfStutters"

      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unhandled-error
      - name: unhandled-error
        arguments: # here are the exceptions we don't want to be reported
          - "fmt.Print.*"
          - "fmt.Fprint.*"
          - "bytes.Buffer.Write"
          - "bytes.Buffer.WriteByte"
          - "bytes.Buffer.WriteString"
          - "strings.Builder.WriteString"
          - "strings.Builder.WriteRune"

      # disable everything we don't want
      - name: add-constant
        disabled: true # too noisy
      - name: line-length-limit
        disabled: true
      - name: argument-limit
        disabled: true
      - name: cognitive-complexity
        disabled: true
      - name: banned-characters
        disabled: true
      - name: cyclomatic
        disabled: true
      - name: max-public-structs
        disabled: true
      - name: function-result-limit
        disabled: true
      - name: function-length
        disabled: true
      - name: file-header
        disabled: true
      - name: empty-lines
        disabled: true